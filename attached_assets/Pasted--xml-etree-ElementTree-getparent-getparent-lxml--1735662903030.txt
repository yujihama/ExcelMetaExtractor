`xml.etree.ElementTree` の標準ライブラリでは、**`getparent()` メソッドは実装されていません**。  
`getparent()` が使えるのは、lxml などの拡張ライブラリを使った場合です。  
（lxml では `from lxml import etree` とすれば `element.getparent()` が利用できます。）

---

# なぜ `getparent()` を使っている？
コードを見る限り、`_extract_shape_info()` の中で、

```python
parent = sp_elem.getparent()
while parent is not None and parent.tag.split('}')[-1] not in ['twoCellAnchor', 'oneCellAnchor']:
    parent = parent.getparent()
```

のように、**図形 (`xdr:sp`) の “アンカー要素 ( `twoCellAnchor` / `oneCellAnchor` )” を探す**ために `getparent()` を使っています。  
しかし、標準ライブラリの `xml.etree.ElementTree` では `getparent()` がないため、エラーが起きているわけです。

---

# 対応策 1: lxml を使う
もし制約がなければ、**lxml** を導入して、

```python
from lxml import etree  # <-- lxml版のetree
```

のように読み込めば、`getparent()` が利用できるようになります。  
ただし、**lxml はサードパーティライブラリ**なので、環境によってはインストールできない場合もあるかもしれません。

---

# 対応策 2: 親要素を手動で紐づける（アンカーと図形をセットで処理する）

標準ライブラリのみで実装するなら、**“上位要素 (anchor) を見つけるために再帰的 / 探索的に親をたどる”** アプローチは諦め、  
**“アンカーを起点に子要素の図形を処理する”** という形に書き換えるのがベストです。

## 具体例

現在のコードでは、  
1. `root.findall('.//xdr:sp')` で図形を列挙 → `_extract_shape_info(sp_elem)` で親を探して座標計算  
2. `anchors = root.findall('.//xdr:twoCellAnchor') + ...` でアンカーを列挙

という流れで、**図形とアンカーをそれぞれ取得している** ため、アンカーと図形が紐づかないときに `getparent()` が必要になっています。

### 改修例

1. **アンカーを列挙** する (`for anchor in anchors:`)  
2. **アンカー配下の `sp` を探す** (`anchor.findall('.//xdr:sp')`)  
3. その図形それぞれについて `self._extract_shape_info(sp, anchor=anchor)` のように **アンカーを引数として渡す**  
4. `_extract_shape_info` で座標を取得するときに `anchor` を見ればよい

たとえば、次のようなイメージです:

```python
anchors = (
    root.findall('.//xdr:twoCellAnchor', self.ns) +
    root.findall('.//xdr:oneCellAnchor', self.ns) +
    root.findall('.//xdr:absoluteAnchor', self.ns)
)

for anchor in anchors:
    # 1つのアンカー内に複数の sp(図形) があることもある
    sp_list = anchor.findall('.//xdr:sp', self.ns)
    for sp_elem in sp_list:
        shape_info = self._extract_shape_info(sp_elem, anchor)  # anchorも渡す
        if shape_info:
            # 後続処理 (EMU→セル座標変換 など)
            ...
```

そして `_extract_shape_info` の定義を変えて、**アンカーを直接参照** して座標を取得します:

```python
def _extract_shape_info(self, sp_elem, anchor) -> Optional[Dict[str, Any]]:
    # ここで getparent() しなくても anchor が分かっている
    # ...

    from_elem = anchor.find('xdr:from', self.ns)
    to_elem = anchor.find('xdr:to', self.ns)
    if from_elem is not None and to_elem is not None:
        ...
```

こうすれば、**`sp_elem.getparent()` は必要なくなります。**

---

## まとめ

- **標準ライブラリの `xml.etree.ElementTree` では `element.getparent()` が使えない** → エラーの原因  
- **lxml** を使えば `getparent()` は使えますが、サードパーティ依存となる  
- **標準ライブラリで済ませる場合** は、**アンカー → 図形** の順番で探索し、**アンカー要素を引数で `_extract_shape_info()` に渡す** 形にリファクタリングするのがおすすめです。  

これで、`getparent()` によるエラーを回避でき、座標計算などの情報も正しく取得できるようになります。